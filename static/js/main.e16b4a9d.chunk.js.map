{"version":3,"sources":["Components/Database.js","Components/AppStates.js","Components/RecipeList.js","Components/ShoppingList.js","App.js","reportWebVitals.js","index.js"],"names":["database","Zucchinipuffer","type","ingredients","Abendbrot","Galette","Linsenbuletten","Kürbissuppe","Hommous","Zucchinisuppe","Spargel","Pizza","Brot","Wurst","Pfannkuchen","Zwiebeln","Eier","Butter","Joghurt","Mehl","Pasta","Bratöl","Olivenöl","Tomaten","Apfel","Bananen","Birnen","Erdbeeren","Himbeeren","Nektarinen","Trauben","APP_STATES","RecipeList","props","db","recipesGrouped","Object","entries","reduce","acc","recipe","meta","push","sort","optionsGrouped","map","label","options","x","value","className","isMulti","name","defaultValue","selectedRecipes","classNamePrefix","onChange","selected","setSelectedRecipes","onClick","setAppState","PreliminaryShoppingList","shoppingList","idx","ingredient","checked","toggleIngredient","ShoppingListElement","useState","setChecked","ShoppingList","App","setShoppingList","appState","useEffect","tempShoppingList","length","flat","Array","from","Set","console","log","mainComponent","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16b4a9d.chunk.js","sourcesContent":["const database = {\n  Zucchinipuffer: {\n    type: 'Gericht',\n    ingredients: ['Eier', 'Zucchini', 'Kartoffeln', 'Minze', 'Petersilie']\n  },\n  'Spaghetti Bolognese': {\n    type: 'Gericht',\n    ingredients: [\n      'Spaghetti',\n      'Passierte Tomaten',\n      'Möhren',\n      'Hack',\n      'Parmesan'\n    ]\n  },\n  Abendbrot: {\n    type: 'Gericht',\n    ingredients: ['Brot', 'Schmier', 'Gewürzgurken', 'Tomaten', 'Wurst / Käse']\n  },\n  Galette: {\n    type: 'Gericht',\n    ingredients: ['Buchweizenmehl', 'Lauch', 'Lachs', 'Zitrone', 'Käse']\n  },\n  Linsenbuletten: {\n    type: 'Gericht',\n    ingredients: [\n      'Rote Linsen',\n      'Zwiebeln',\n      'Eier',\n      'Panniermehl',\n      'Tomatenmark',\n      'Salat'\n    ]\n  },\n  Kürbissuppe: {\n    type: 'Gericht',\n    ingredients: ['Kürbis', 'Lauch', 'Kartoffeln', 'Milch', 'Brot']\n  },\n  Hommous: {\n    type: 'Gericht',\n    ingredients: [\n      'Kichererbsen',\n      'Knoblauch',\n      'Tahina',\n      'Limetten',\n      'Brot',\n      'Tomaten',\n      'Gurken',\n      'Paprika'\n    ]\n  },\n  Zucchinisuppe: {\n    type: 'Gericht',\n    ingredients: [\n      'Zucchini',\n      'Zwiebeln',\n      'Gemüsebrühe',\n      'Kräuterfrischkäse',\n      'Zitrone'\n    ]\n  },\n  'Birnen Bohnen und Speck': {\n    type: 'Gericht',\n    ingredients: [\n      'Kartoffeln',\n      'Zwiebeln',\n      'Gemüsebrühe',\n      'Birnen',\n      'Bohnen',\n      'Speck'\n    ]\n  },\n  'Hähnchen Xao': {\n    type: 'Gericht',\n    ingredients: ['Tofu', 'Brokkoli', 'Paprika']\n  },\n  Spargel: {\n    type: 'Gericht',\n    ingredients: ['Spargel', 'Kartoffeln', 'Schinken']\n  },\n  Pizza: {\n    type: 'Gericht',\n    ingredients: [\n      'Hefe',\n      'Mehl',\n      'Mozzarella',\n      'Mais',\n      'Champignons',\n      'Passierte Tomaten',\n      'Paprika'\n    ]\n  },\n  Brot: {\n    type: 'Frühstück',\n    ingredients: ['Brot']\n  },\n  Wurst: {\n    type: 'Frühstück',\n    ingredients: ['Wurst']\n  },\n  Pfannkuchen: {\n    type: 'Frühstück',\n    ingredients: ['Eier', 'Mehl', 'Milch', 'Schinken', 'Apfel']\n  },\n  Zwiebeln: {\n    type: 'Evergreens',\n    ingredients: ['Zwiebeln']\n  },\n  Eier: {\n    type: 'Evergreens',\n    ingredients: ['Eier']\n  },\n  Butter: {\n    type: 'Evergreens',\n    ingredients: ['Butter']\n  },\n  Joghurt: {\n    type: 'Evergreens',\n    ingredients: ['Joghurt']\n  },\n  Mehl: {\n    type: 'Evergreens',\n    ingredients: ['Mehl']\n  },\n  Pasta: {\n    type: 'Evergreens',\n    ingredients: ['Pasta']\n  },\n  Bratöl: {\n    type: 'Evergreens',\n    ingredients: ['Bratöl']\n  },\n  Olivenöl: {\n    type: 'Evergreens',\n    ingredients: ['Olivenöl']\n  },\n  'Bohnen in Tomatensosse': {\n    type: 'Evergreens',\n    ingredients: ['Bohnen in Tomatensosse']\n  },\n  'Passierte Tomaten': {\n    type: 'Evergreens',\n    ingredients: ['Passierte Tomaten']\n  },\n  Tomaten: {\n    type: 'Evergreens',\n    ingredients: ['Tomaten']\n  },\n  Apfel: {\n    type: 'Obst',\n    ingredients: ['Apfel']\n  },\n  Bananen: {\n    type: 'Obst',\n    ingredients: ['Bananen']\n  },\n  Birnen: {\n    type: 'Obst',\n    ingredients: ['Birnen']\n  },\n  Erdbeeren: {\n    type: 'Obst',\n    ingredients: ['Erdbeeren']\n  },\n  Himbeeren: {\n    type: 'Obst',\n    ingredients: ['Himbeeren']\n  },\n  Nektarinen: {\n    type: 'Obst',\n    ingredients: ['Nektarinen']\n  },\n  Trauben: {\n    type: 'Obst',\n    ingredients: ['Trauben']\n  }\n}\n\nexport function groupByType (db) {\n  const recipeList = Object.entries(db)\n\n  const grouped = recipeList.reduce((acc, [recipe, meta]) => {\n    if (!(meta.type in acc)) {\n      acc[meta.type] = []\n    }\n    acc[meta.type].push(recipe)\n    acc[meta.type].sort()\n\n    return acc\n  }, {})\n\n  return grouped\n}\n\nexport default database\n","export const APP_STATES = {\n  RECIPE_LIST: 1,\n  PRELIMINARY_SHOPPING_LIST: 2,\n  SHOPPING_LIST: 3\n}\n","import React from 'react'\nimport Select from 'react-select'\n\nimport database, { groupByType } from './Database'\nimport { APP_STATES } from './AppStates'\n\nimport './RecipeList.scss'\n\nconst RecipeList = props => {\n  const recipesGrouped = groupByType(database)\n  const optionsGrouped = Object.entries(recipesGrouped).map(\n    ([group, items]) => {\n      return {\n        label: group,\n        options: items.map(x => {\n          return { label: x, value: x }\n        })\n      }\n    }\n  )\n\n  return (\n    <div className='RecipeList'>\n      <header>\n        <h1>To buy</h1>\n      </header>\n\n      <main>\n        <Select\n          isMulti\n          name='Recipes'\n          defaultValue={props.selectedRecipes}\n          options={optionsGrouped}\n          className='basic-multi-select'\n          classNamePrefix='select'\n          onChange={selected => props.setSelectedRecipes(selected)}\n        />\n      </main>\n\n      <footer>\n        <button\n          onClick={() =>\n            props.setAppState(APP_STATES.PRELIMINARY_SHOPPING_LIST)\n          }\n        >\n          Next\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nexport default RecipeList\n","import React, { useState } from 'react'\nimport database from './Database'\nimport { APP_STATES } from './AppStates'\n\nimport './ShoppingList.scss'\n\nexport const PreliminaryShoppingList = props => {\n  return (\n    <div className='ShoppingList PreliminaryShoppingList'>\n      <header>\n        <h1>Preliminary Shopping List</h1>\n      </header>\n      <main>\n        {Object.entries(props.shoppingList).map(\n          ([ingredient, checked], idx) => (\n            <div\n              className={\n                checked ? 'ShoppingListElementChecked' : 'ShoppingListElement'\n              }\n              onClick={() => props.toggleIngredient(ingredient)}\n            >\n              {ingredient}\n            </div>\n          )\n        )}\n      </main>\n\n      <footer>\n        <button onClick={() => props.setAppState(APP_STATES.RECIPE_LIST)}>\n          Back\n        </button>\n        <button onClick={() => props.setAppState(APP_STATES.SHOPPING_LIST)}>\n          Next\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nconst ShoppingListElement = props => {\n  const [checked, setChecked] = useState(false)\n\n  return (\n    <div\n      className={checked ? 'ShoppingListElementChecked' : 'ShoppingListElement'}\n      onClick={() => setChecked(!checked)}\n    >\n      {props.ingredient}\n    </div>\n  )\n}\n\nexport const ShoppingList = props => {\n  return (\n    <div className='ShoppingList'>\n      <header>\n        <h1>Shopping List</h1>\n      </header>\n      <main>\n        {Object.entries(props.shoppingList).map(\n          ([ingredient, checked], idx) => {\n            if (!checked)\n              return (\n                <ShoppingListElement key={ingredient} ingredient={ingredient} />\n              )\n            else return null\n          }\n        )}\n      </main>\n\n      <footer>\n        <button\n          onClick={() =>\n            props.setAppState(APP_STATES.PRELIMINARY_SHOPPING_LIST)\n          }\n        >\n          Back\n        </button>\n      </footer>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport RecipeList from './Components/RecipeList'\nimport {\n  PreliminaryShoppingList,\n  ShoppingList\n} from './Components/ShoppingList'\nimport database from './Components/Database'\nimport { APP_STATES } from './Components/AppStates'\n\nimport './App.scss'\n\nconst App = props => {\n  const [selectedRecipes, setSelectedRecipes] = useState([])\n  const [shoppingList, setShoppingList] = useState({})\n  const [appState, setAppState] = useState(APP_STATES.RECIPE_LIST)\n\n  // update checkable shopping list every time the recipes change\n  useEffect(() => {\n    const tempShoppingList = selectedRecipes.reduce((acc, recipe) => {\n      let ingredients = database[recipe.value]['ingredients']\n      if (ingredients.length > 0) {\n        ingredients = ingredients.flat()\n        ingredients = Array.from(new Set(ingredients))\n      }\n\n      ingredients.map(x => {\n        acc[x] = false\n        return false\n      })\n      return acc\n    }, {})\n    console.log(tempShoppingList)\n    setShoppingList(tempShoppingList)\n  }, [selectedRecipes])\n\n  const toggleIngredient = ingredient => {\n    if (ingredient in shoppingList) {\n      let s = { ...shoppingList }\n      s[ingredient] = !shoppingList.ingredient\n      setShoppingList(s)\n    }\n  }\n\n  let mainComponent = null\n  switch (appState) {\n    case APP_STATES.RECIPE_LIST:\n      mainComponent = (\n        <RecipeList\n          selectedRecipes={selectedRecipes}\n          setSelectedRecipes={setSelectedRecipes}\n          setAppState={setAppState}\n        />\n      )\n      break\n    case APP_STATES.PRELIMINARY_SHOPPING_LIST:\n      mainComponent = (\n        <PreliminaryShoppingList\n          shoppingList={shoppingList}\n          setShoppingList={setShoppingList}\n          setAppState={setAppState}\n          toggleIngredient={toggleIngredient}\n        />\n      )\n      break\n    case APP_STATES.SHOPPING_LIST:\n      mainComponent = (\n        <ShoppingList shoppingList={shoppingList} setAppState={setAppState} />\n      )\n      break\n    default:\n      mainComponent = (\n        <RecipeList\n          selectedRecipes={selectedRecipes}\n          setSelectedRecipes={setSelectedRecipes}\n          setAppState={setAppState}\n        />\n      )\n  }\n\n  return <div className='App'>{mainComponent}</div>\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}