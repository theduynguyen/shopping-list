{"version":3,"sources":["Components/AppStates.js","Components/RecipeList.js","Components/Database.js","Components/ShoppingList.js","App.js","reportWebVitals.js","index.js"],"names":["APP_STATES","RecipeList","props","db","recipesGrouped","database","Object","entries","reduce","acc","recipe","meta","type","push","sort","optionsGrouped","map","label","options","x","value","className","isMulti","name","defaultValue","selectedRecipes","classNamePrefix","onChange","selected","setSelectedRecipes","onClick","setAppState","PreliminaryShoppingList","shoppingList","idx","ingredient","checked","toggleIngredient","ShoppingListElement","useState","setChecked","ShoppingList","App","backendHost","setBackendHost","hostLoadingFeedback","setHostLoadingFeedback","currentDatabase","setCurrentDatabase","setShoppingList","appState","fetchDB","a","axios","get","res","data","useEffect","tempShoppingList","ingredients","length","flat","Array","from","Set","console","log","mainComponent","e","target","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8478a9d4.chunk.js","sourcesContent":["export const APP_STATES = {\n  SET_BACKEND: 0,\n  RECIPE_LIST: 1,\n  PRELIMINARY_SHOPPING_LIST: 2,\n  SHOPPING_LIST: 3\n}\n","import React from 'react'\nimport Select from 'react-select'\n\nimport { groupByType } from './Database'\nimport { APP_STATES } from './AppStates'\n\nimport './RecipeList.scss'\n\nconst RecipeList = props => {\n  const recipesGrouped = groupByType(props.database)\n  const optionsGrouped = Object.entries(recipesGrouped).map(\n    ([group, items]) => {\n      return {\n        label: group,\n        options: items.map(x => {\n          return { label: x, value: x }\n        })\n      }\n    }\n  )\n\n  return (\n    <div className='RecipeList'>\n      <header>\n        <h1>To buy</h1>\n      </header>\n\n      <main>\n        <Select\n          isMulti\n          name='Recipes'\n          defaultValue={props.selectedRecipes}\n          options={optionsGrouped}\n          className='basic-multi-select'\n          classNamePrefix='select'\n          onChange={selected => props.setSelectedRecipes(selected)}\n        />\n      </main>\n\n      <footer>\n        <button\n          onClick={() =>\n            props.setAppState(APP_STATES.PRELIMINARY_SHOPPING_LIST)\n          }\n        >\n          Next\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nexport default RecipeList\n","export function groupByType (db) {\n  const recipeList = Object.entries(db)\n\n  const grouped = recipeList.reduce((acc, [recipe, meta]) => {\n    if (!(meta.type in acc)) {\n      acc[meta.type] = []\n    }\n    acc[meta.type].push(recipe)\n    acc[meta.type].sort()\n\n    return acc\n  }, {})\n\n  return grouped\n}\n","import React, { useState } from 'react'\nimport { APP_STATES } from './AppStates'\n\nimport './ShoppingList.scss'\n\nexport const PreliminaryShoppingList = props => {\n  return (\n    <div className='ShoppingList PreliminaryShoppingList'>\n      <header>\n        <h1>Preliminary Shopping List</h1>\n      </header>\n      <main>\n        {Object.entries(props.shoppingList).map(\n          ([ingredient, checked], idx) => (\n            <div\n              className={\n                checked ? 'ShoppingListElementChecked' : 'ShoppingListElement'\n              }\n              onClick={() => props.toggleIngredient(ingredient)}\n            >\n              {ingredient}\n            </div>\n          )\n        )}\n      </main>\n\n      <footer>\n        <button onClick={() => props.setAppState(APP_STATES.RECIPE_LIST)}>\n          Back\n        </button>\n        <button onClick={() => props.setAppState(APP_STATES.SHOPPING_LIST)}>\n          Next\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nconst ShoppingListElement = props => {\n  const [checked, setChecked] = useState(false)\n\n  return (\n    <div\n      className={checked ? 'ShoppingListElementChecked' : 'ShoppingListElement'}\n      onClick={() => setChecked(!checked)}\n    >\n      {props.ingredient}\n    </div>\n  )\n}\n\nexport const ShoppingList = props => {\n  return (\n    <div className='ShoppingList'>\n      <header>\n        <h1>Shopping List</h1>\n      </header>\n      <main>\n        {Object.entries(props.shoppingList).map(\n          ([ingredient, checked], idx) => {\n            if (!checked)\n              return (\n                <ShoppingListElement key={ingredient} ingredient={ingredient} />\n              )\n            else return null\n          }\n        )}\n      </main>\n\n      <footer>\n        <button\n          onClick={() =>\n            props.setAppState(APP_STATES.PRELIMINARY_SHOPPING_LIST)\n          }\n        >\n          Back\n        </button>\n      </footer>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RecipeList from './Components/RecipeList'\nimport {\n  PreliminaryShoppingList,\n  ShoppingList\n} from './Components/ShoppingList'\nimport database from './Components/Database'\nimport { APP_STATES } from './Components/AppStates'\n\nimport './App.scss'\n\nconst App = props => {\n  const [backendHost, setBackendHost] = useState('')\n  const [hostLoadingFeedback, setHostLoadingFeedback] = useState('')\n  const [currentDatabase, setCurrentDatabase] = useState({})\n  const [selectedRecipes, setSelectedRecipes] = useState([])\n  const [shoppingList, setShoppingList] = useState({})\n  const [appState, setAppState] = useState(APP_STATES.SET_BACKEND)\n\n  const fetchDB = async () => {\n    setHostLoadingFeedback('Loading...')\n    const res = await axios.get(`${backendHost}/get_db`)\n    setCurrentDatabase(res.data)\n    setAppState(APP_STATES.RECIPE_LIST)\n  }\n\n  // update checkable shopping list every time the recipes change\n  useEffect(() => {\n    const tempShoppingList = selectedRecipes.reduce((acc, recipe) => {\n      let ingredients = currentDatabase[recipe.value]['shopping_list']\n      if (ingredients.length > 0) {\n        ingredients = ingredients.flat()\n        ingredients = Array.from(new Set(ingredients))\n      }\n\n      ingredients.map(x => {\n        acc[x] = false\n        return false\n      })\n      return acc\n    }, {})\n    console.log(tempShoppingList)\n    setShoppingList(tempShoppingList)\n  }, [selectedRecipes])\n\n  const toggleIngredient = ingredient => {\n    if (ingredient in shoppingList) {\n      let s = { ...shoppingList }\n      s[ingredient] = !shoppingList.ingredient\n      setShoppingList(s)\n    }\n  }\n\n  let mainComponent = null\n  switch (appState) {\n    case APP_STATES.SET_BACKEND:\n      mainComponent = (\n        <div className='SetBackend'>\n          <header>\n            <h1>Backend Host</h1>\n          </header>\n          <main>\n            <input onChange={e => setBackendHost(e.target.value)} />\n            <button onClick={() => fetchDB()}>Go</button>\n          </main>\n          <footer>{hostLoadingFeedback}</footer>\n        </div>\n      )\n      break\n    case APP_STATES.RECIPE_LIST:\n      mainComponent = (\n        <RecipeList\n          database={currentDatabase}\n          selectedRecipes={selectedRecipes}\n          setSelectedRecipes={setSelectedRecipes}\n          setAppState={setAppState}\n        />\n      )\n      break\n    case APP_STATES.PRELIMINARY_SHOPPING_LIST:\n      mainComponent = (\n        <PreliminaryShoppingList\n          shoppingList={shoppingList}\n          setShoppingList={setShoppingList}\n          setAppState={setAppState}\n          toggleIngredient={toggleIngredient}\n        />\n      )\n      break\n    case APP_STATES.SHOPPING_LIST:\n      mainComponent = (\n        <ShoppingList shoppingList={shoppingList} setAppState={setAppState} />\n      )\n      break\n    default:\n      mainComponent = (\n        <RecipeList\n          selectedRecipes={selectedRecipes}\n          setSelectedRecipes={setSelectedRecipes}\n          setAppState={setAppState}\n        />\n      )\n  }\n\n  return <div className='App'>{mainComponent}</div>\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}