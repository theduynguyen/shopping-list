{"version":3,"sources":["Components/Database.js","Components/RecipeList.js","Components/ShoppingList.js","App.js","reportWebVitals.js","index.js"],"names":["database","Zucchinipuffer","type","ingredients","Abendbrot","Galette","Linsenbuletten","Kürbissuppe","Hommous","Zucchinisuppe","Spargel","Pizza","Brot","Wurst","Pfannkuchen","Zwiebeln","Eier","Butter","Mehl","Pasta","Bratöl","Olivenöl","Tomaten","Apfel","Bananen","Birnen","Erdbeeren","Himbeeren","Nektarinen","Trauben","RecipeList","props","db","recipesGrouped","Object","entries","reduce","acc","recipe","meta","push","sort","optionsGrouped","map","label","options","x","value","className","isMulti","name","defaultValue","selectedRecipes","classNamePrefix","onChange","selected","setSelectedRecipes","onClick","setSeeShoppingList","ShoppingListElement","ingredient","ShoppingList","shoppingList","length","flat","Array","from","Set","idx","App","useState","seeShoppingList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAwLeA,MAxLE,CACfC,eAAgB,CACdC,KAAM,UACNC,YAAa,CAAC,OAAQ,WAAY,aAAc,QAAS,eAE3D,sBAAuB,CACrBD,KAAM,UACNC,YAAa,CAAC,YAAa,oBAAqB,YAAU,SAE5DC,UAAW,CACTF,KAAM,UACNC,YAAa,CAAC,OAAQ,UAAW,kBAAgB,UAAW,oBAE9DE,QAAS,CACPH,KAAM,UACNC,YAAa,CAAC,iBAAkB,QAAS,QAAS,UAAW,YAE/DG,eAAgB,CACdJ,KAAM,UACNC,YAAa,CACX,cACA,WACA,OACA,cACA,cACA,UAGJI,iBAAa,CACXL,KAAM,UACNC,YAAa,CAAC,YAAU,QAAS,aAAc,QAAS,SAE1DK,QAAS,CACPN,KAAM,UACNC,YAAa,CACX,eACA,YACA,SACA,WACA,OACA,UACA,SACA,YAGJM,cAAe,CACbP,KAAM,UACNC,YAAa,CACX,WACA,WACA,oBACA,0BACA,YAGJ,0BAA2B,CACzBD,KAAM,UACNC,YAAa,CACX,aACA,WACA,oBACA,SACA,SACA,UAGJ,kBAAgB,CACdD,KAAM,UACNC,YAAa,CAAC,WAAY,WAAY,YAExCO,QAAS,CACPR,KAAM,UACNC,YAAa,CAAC,UAAW,aAAc,aAEzCQ,MAAO,CACLT,KAAM,UACNC,YAAa,CACX,OACA,OACA,aACA,OACA,cACA,oBACA,YAGJS,KAAM,CACJV,KAAM,kBACNC,YAAa,CAAC,SAEhBU,MAAO,CACLX,KAAM,kBACNC,YAAa,CAAC,UAEhBW,YAAa,CACXZ,KAAM,kBACNC,YAAa,CAAC,OAAQ,OAAQ,QAAS,WAAY,UAErDY,SAAU,CACRb,KAAM,aACNC,YAAa,CAAC,aAEhBa,KAAM,CACJd,KAAM,aACNC,YAAa,CAAC,SAEhBc,OAAQ,CACNf,KAAM,aACNC,YAAa,CAAC,WAEhBe,KAAM,CACJhB,KAAM,aACNC,YAAa,CAAC,SAEhBgB,MAAO,CACLjB,KAAM,aACNC,YAAa,CAAC,UAEhBiB,YAAQ,CACNlB,KAAM,aACNC,YAAa,CAAC,cAEhBkB,cAAU,CACRnB,KAAM,aACNC,YAAa,CAAC,gBAEhB,yBAA0B,CACxBD,KAAM,aACNC,YAAa,CAAC,2BAEhB,oBAAqB,CACnBD,KAAM,aACNC,YAAa,CAAC,sBAEhBmB,QAAS,CACPpB,KAAM,aACNC,YAAa,CAAC,YAEhBoB,MAAO,CACLrB,KAAM,OACNC,YAAa,CAAC,UAEhBqB,QAAS,CACPtB,KAAM,OACNC,YAAa,CAAC,YAEhBsB,OAAQ,CACNvB,KAAM,OACNC,YAAa,CAAC,WAEhBuB,UAAW,CACTxB,KAAM,OACNC,YAAa,CAAC,cAEhBwB,UAAW,CACTzB,KAAM,OACNC,YAAa,CAAC,cAEhByB,WAAY,CACV1B,KAAM,OACNC,YAAa,CAAC,eAEhB0B,QAAS,CACP3B,KAAM,OACNC,YAAa,CAAC,aC1HH2B,G,MApCI,SAAAC,GACjB,IDiK2BC,ECjKrBC,GDiKqBD,ECjKQhC,EDkKhBkC,OAAOC,QAAQH,GAEPI,QAAO,SAACC,EAAD,GAA0B,IAAD,mBAAlBC,EAAkB,KAAVC,EAAU,KAOzD,OANMA,EAAKrC,QAAQmC,IACjBA,EAAIE,EAAKrC,MAAQ,IAEnBmC,EAAIE,EAAKrC,MAAMsC,KAAKF,GACpBD,EAAIE,EAAKrC,MAAMuC,OAERJ,IACN,KC3KGK,EAAiBR,OAAOC,QAAQF,GAAgBU,KACpD,YAAqB,IAAD,mBAClB,MAAO,CACLC,MAFgB,KAGhBC,QAHgB,KAGDF,KAAI,SAAAG,GACjB,MAAO,CAAEF,MAAOE,EAAGC,MAAOD,UAMlC,OACE,sBAAKE,UAAU,aAAf,UACE,+BACE,cAAC,IAAD,CACEC,SAAO,EACPC,KAAK,UACLC,aAAcpB,EAAMqB,gBACpBP,QAASH,EACTM,UAAU,qBACVK,gBAAgB,SAChBC,SAAU,SAAAC,GAAQ,OAAIxB,EAAMyB,mBAAmBD,QAInD,iCACE,wBAAQE,QAAS,kBAAM1B,EAAM2B,oBAAmB,IAAhD,kCC7BFC,G,MAAsB,SAAA5B,GAC1B,OAAO,qBAAKiB,UAAU,sBAAf,SAAsCjB,EAAM6B,eAuBtCC,EApBM,SAAA9B,GACnB,IAAI+B,EAAe/B,EAAMqB,gBAAgBT,KACvC,SAAAL,GAAM,OAAItC,EAASsC,EAAOS,OAAhB,eAOZ,OALIe,EAAaC,OAAS,IACxBD,EAAeA,EAAaE,OAC5BF,EAAeG,MAAMC,KAAK,IAAIC,IAAIL,KAIlC,sBAAKd,UAAU,eAAf,UACGc,EAAanB,KAAI,SAACG,EAAGsB,GAAJ,OAChB,cAAC,EAAD,CAA+BR,WAAYd,GAAjBsB,MAG5B,wBAAQX,QAAS,kBAAM1B,EAAM2B,oBAAmB,IAAhD,sBCISW,G,MAtBH,SAAAtC,GAAU,IAAD,EAC2BuC,mBAAS,IADpC,mBACZlB,EADY,KACKI,EADL,OAE2Bc,oBAAS,GAFpC,mBAEZC,EAFY,KAEKb,EAFL,KAInB,OACE,qBAAKV,UAAU,MAAf,SACGuB,EACC,cAAC,EAAD,CACEnB,gBAAiBA,EACjBM,mBAAoBA,IAGtB,cAAC,EAAD,CACEN,gBAAiBA,EACjBI,mBAAoBA,EACpBE,mBAAoBA,QCTfc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7695b26.chunk.js","sourcesContent":["const database = {\n  Zucchinipuffer: {\n    type: 'Gericht',\n    ingredients: ['Eier', 'Zucchini', 'Kartoffeln', 'Minze', 'Petersilie']\n  },\n  'Spaghetti Bolognese': {\n    type: 'Gericht',\n    ingredients: ['Spaghetti', 'Passierte Tomaten', 'Möhren', 'Hack']\n  },\n  Abendbrot: {\n    type: 'Gericht',\n    ingredients: ['Brot', 'Schmier', 'Gewürzgurken', 'Tomaten', 'Wurst / Käse']\n  },\n  Galette: {\n    type: 'Gericht',\n    ingredients: ['Buchweizenmehl', 'Lauch', 'Lachs', 'Zitrone', 'Käse']\n  },\n  Linsenbuletten: {\n    type: 'Gericht',\n    ingredients: [\n      'Rote Linsen',\n      'Zwiebeln',\n      'Eier',\n      'Panniermehl',\n      'Tomatenmark',\n      'Salat'\n    ]\n  },\n  Kürbissuppe: {\n    type: 'Gericht',\n    ingredients: ['Kürbis', 'Lauch', 'Kartoffeln', 'Milch', 'Brot']\n  },\n  Hommous: {\n    type: 'Gericht',\n    ingredients: [\n      'Kichererbsen',\n      'Knoblauch',\n      'Tahina',\n      'Limetten',\n      'Brot',\n      'Tomaten',\n      'Gurken',\n      'Paprika'\n    ]\n  },\n  Zucchinisuppe: {\n    type: 'Gericht',\n    ingredients: [\n      'Zucchini',\n      'Zwiebeln',\n      'Gemüsebrühe',\n      'Kräuterfrischkäse',\n      'Zitrone'\n    ]\n  },\n  'Birnen Bohnen und Speck': {\n    type: 'Gericht',\n    ingredients: [\n      'Kartoffeln',\n      'Zwiebeln',\n      'Gemüsebrühe',\n      'Birnen',\n      'Bohnen',\n      'Speck'\n    ]\n  },\n  'Hähnchen Xao': {\n    type: 'Gericht',\n    ingredients: ['Tofu Xao', 'Brokkoli', 'Paprika']\n  },\n  Spargel: {\n    type: 'Gericht',\n    ingredients: ['Spargel', 'Kartoffeln', 'Schinken']\n  },\n  Pizza: {\n    type: 'Gericht',\n    ingredients: [\n      'Hefe',\n      'Mehl',\n      'Mozzarella',\n      'Mais',\n      'Champignons',\n      'Passierte Tomaten',\n      'Paprika'\n    ]\n  },\n  Brot: {\n    type: 'Frühstück',\n    ingredients: ['Brot']\n  },\n  Wurst: {\n    type: 'Frühstück',\n    ingredients: ['Wurst']\n  },\n  Pfannkuchen: {\n    type: 'Frühstück',\n    ingredients: ['Eier', 'Mehl', 'Milch', 'Schinken', 'Apfel']\n  },\n  Zwiebeln: {\n    type: 'Evergreens',\n    ingredients: ['Zwiebeln']\n  },\n  Eier: {\n    type: 'Evergreens',\n    ingredients: ['Eier']\n  },\n  Butter: {\n    type: 'Evergreens',\n    ingredients: ['Butter']\n  },\n  Mehl: {\n    type: 'Evergreens',\n    ingredients: ['Mehl']\n  },\n  Pasta: {\n    type: 'Evergreens',\n    ingredients: ['Pasta']\n  },\n  Bratöl: {\n    type: 'Evergreens',\n    ingredients: ['Bratöl']\n  },\n  Olivenöl: {\n    type: 'Evergreens',\n    ingredients: ['Olivenöl']\n  },\n  'Bohnen in Tomatensosse': {\n    type: 'Evergreens',\n    ingredients: ['Bohnen in Tomatensosse']\n  },\n  'Passierte Tomaten': {\n    type: 'Evergreens',\n    ingredients: ['Passierte Tomaten']\n  },\n  Tomaten: {\n    type: 'Evergreens',\n    ingredients: ['Tomaten']\n  },\n  Apfel: {\n    type: 'Obst',\n    ingredients: ['Apfel']\n  },\n  Bananen: {\n    type: 'Obst',\n    ingredients: ['Bananen']\n  },\n  Birnen: {\n    type: 'Obst',\n    ingredients: ['Birnen']\n  },\n  Erdbeeren: {\n    type: 'Obst',\n    ingredients: ['Erdbeeren']\n  },\n  Himbeeren: {\n    type: 'Obst',\n    ingredients: ['Himbeeren']\n  },\n  Nektarinen: {\n    type: 'Obst',\n    ingredients: ['Nektarinen']\n  },\n  Trauben: {\n    type: 'Obst',\n    ingredients: ['Trauben']\n  }\n}\n\nexport function groupByType (db) {\n  const recipeList = Object.entries(db)\n\n  const grouped = recipeList.reduce((acc, [recipe, meta]) => {\n    if (!(meta.type in acc)) {\n      acc[meta.type] = []\n    }\n    acc[meta.type].push(recipe)\n    acc[meta.type].sort()\n\n    return acc\n  }, {})\n\n  return grouped\n}\n\nexport default database\n","import React from 'react'\nimport Select from 'react-select'\n\nimport database, { groupByType } from './Database'\nimport './RecipeList.scss'\n\nconst RecipeList = props => {\n  const recipesGrouped = groupByType(database)\n  const optionsGrouped = Object.entries(recipesGrouped).map(\n    ([group, items]) => {\n      return {\n        label: group,\n        options: items.map(x => {\n          return { label: x, value: x }\n        })\n      }\n    }\n  )\n\n  return (\n    <div className='RecipeList'>\n      <main>\n        <Select\n          isMulti\n          name='Recipes'\n          defaultValue={props.selectedRecipes}\n          options={optionsGrouped}\n          className='basic-multi-select'\n          classNamePrefix='select'\n          onChange={selected => props.setSelectedRecipes(selected)}\n        />\n      </main>\n\n      <footer>\n        <button onClick={() => props.setSeeShoppingList(true)}>\n          Shopping List\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nexport default RecipeList\n","import React from 'react'\nimport database from './Database'\n\nimport './ShoppingList.scss'\n\nconst ShoppingListElement = props => {\n  return <div className='ShoppingListElement'>{props.ingredient}</div>\n}\n\nconst ShoppingList = props => {\n  let shoppingList = props.selectedRecipes.map(\n    recipe => database[recipe.value]['ingredients']\n  )\n  if (shoppingList.length > 0) {\n    shoppingList = shoppingList.flat()\n    shoppingList = Array.from(new Set(shoppingList))\n  }\n\n  return (\n    <div className='ShoppingList'>\n      {shoppingList.map((x, idx) => (\n        <ShoppingListElement key={idx} ingredient={x} />\n      ))}\n\n      <button onClick={() => props.setSeeShoppingList(false)}>Back</button>\n    </div>\n  )\n}\n\nexport default ShoppingList\n","import React, { useState } from 'react'\nimport RecipeList from './Components/RecipeList'\nimport ShoppingList from './Components/ShoppingList'\n\nimport './App.scss'\n\nconst App = props => {\n  const [selectedRecipes, setSelectedRecipes] = useState([])\n  const [seeShoppingList, setSeeShoppingList] = useState(false)\n\n  return (\n    <div className='App'>\n      {seeShoppingList ? (\n        <ShoppingList\n          selectedRecipes={selectedRecipes}\n          setSeeShoppingList={setSeeShoppingList}\n        />\n      ) : (\n        <RecipeList\n          selectedRecipes={selectedRecipes}\n          setSelectedRecipes={setSelectedRecipes}\n          setSeeShoppingList={setSeeShoppingList}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}